<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.IMemberDAO">
	<sql id="searchFrag">
		<where>
			<if test="searchVO!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)">
				<choose>
					<when test="'name'.equals(searchVO.searchType)">
						MEM_NAME LIKE '%'||#{searchVO.searchWord}||'%'
					</when>
					<when test="'address'.equals(searchVO.searchType)">
						INSTR(MEM_ADD1, #{searchVO.searchWord}) > 0
					</when>
					<otherwise>
						MEM_NAME LIKE '%'||#{searchVO.searchWord}||'%'
	    				OR INSTR(MEM_ADD1, #{searchVO.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>
	<select id="selelctMemberCount" resultType="int" parameterType="PagingVO">
		SELECT COUNT(*)
		FROM MEMBER
	    <include refid="searchFrag"/>
	</select>
	<select id="selectMemberList" resultType="MemberVO" parameterType="PagingVO">
		SELECT A.*
		FROM(
		    SELECT ROWNUM RNUM, MEM_ID, MEM_NAME, MEM_HP, MEM_MAIL, MEM_MILEAGE, MEM_ADD1
		    FROM MEMBER
		    <include refid="searchFrag"/>
		    ORDER BY MEM_ID DESC
		) A
		<![CDATA[
		WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		]]>
	</select>
	<resultMap type="MemberVO" id="memberMap" autoMapping="true">
		<id property="mem_id" column="MEM_ID"/>
		<collection property="prodList" javaType="java.util.List" ofType="ProdVO" autoMapping="true" >
			<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		</collection>
		<collection property="mem_roles" javaType="java.util.Set" ofType="string">
			<result property="" column="ROLE_NAME"/>
		</collection>
	</resultMap>
	<select id="selectMember" resultMap="memberMap" parameterType="string">
		SELECT DISTINCT
		    A.MEM_ID,    MEM_PASS,    MEM_NAME,    MEM_REGNO1,
		    MEM_REGNO2,  TO_CHAR(MEM_BIR, 'YYYY-MM-DD') MEM_BIR,    
		    MEM_ZIP,    MEM_ADD1,
		    MEM_ADD2,    MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,
		    MEM_MAIL,    MEM_JOB,    MEM_LIKE,    MEM_MEMORIAL,
		    TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY,    
		    MEM_MILEAGE,    MEM_DELETE
		    , PROD_ID, PROD_NAME, PROD_COST, PROD_PRICE, PROD_MILEAGE
    		, PROD_BUYER
    		, BUYER_NAME, BUYER_ADD1, BUYER_CHARGER
    		, ROLE_NAME
		FROM    MEMBER A INNER JOIN  USERROLE B ON(A.MEM_ID = B.MEM_ID)
						LEFT OUTER JOIN CART ON(A.MEM_ID = CART_MEMBER)
						LEFT OUTER JOIN PROD ON(CART_PROD = PROD_ID)
						LEFT OUTER JOIN BUYER ON(BUYER_ID = PROD_BUYER)
						
		WHERE A.MEM_ID = #{mem_id}
	</select>
	
	<update id="updateMember" parameterType="MemberVO">
		UPDATE MEMBER
	    SET
		    MEM_ZIP				=	#{mem_zip,jdbcType=VARCHAR},
		    MEM_ADD1			=	#{mem_add1,jdbcType=VARCHAR},
		    MEM_ADD2			=	#{mem_add2,jdbcType=VARCHAR},
		    MEM_HOMETEL			=	#{mem_hometel,jdbcType=VARCHAR},
		    MEM_COMTEL			=	#{mem_comtel,jdbcType=VARCHAR},
		    MEM_HP				=	#{mem_hp,jdbcType=VARCHAR},
		    MEM_MAIL			=	#{mem_mail,jdbcType=VARCHAR},
		    MEM_JOB				=	#{mem_job,jdbcType=VARCHAR},
		    MEM_LIKE			=	#{mem_like,jdbcType=VARCHAR},
		    MEM_MEMORIAL		=	#{mem_memorial,jdbcType=VARCHAR},
		    MEM_MEMORIALDAY		=	TO_DATE(#{mem_memorialday,jdbcType=DATE}, 'YYYY-MM-DD')
		WHERE   MEM_ID = #{mem_id} 	AND   MEM_PASS = #{mem_pass,jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteMember" parameterType="string">
		UPDATE MEMBER
		SET MEM_DELETE = 'Y'
		WHERE MEM_ID = #{mem_id}
	</delete>
	
	<insert id="insertMember" parameterType="memberVO">
		INSERT ALL 
		INTO MEMBER (
		    MEM_ID,    MEM_PASS,    MEM_NAME,    MEM_REGNO1,
		    MEM_REGNO2,    MEM_BIR,    MEM_ZIP,    MEM_ADD1,
		    MEM_ADD2,    MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,
		    MEM_MAIL,    MEM_JOB,    MEM_LIKE,    MEM_MEMORIAL,
		    MEM_MEMORIALDAY, MEM_MILEAGE
		) VALUES (
		    #{mem_id,jdbcType=VARCHAR},    #{mem_pass,jdbcType=VARCHAR},    #{mem_name,jdbcType=VARCHAR},    #{mem_regno1,jdbcType=VARCHAR},
		    #{mem_regno2,jdbcType=VARCHAR},   TO_DATE(#{mem_bir,jdbcType=DATE}, 'YYYY-MM-DD'),    #{mem_zip,jdbcType=VARCHAR},    #{mem_add1,jdbcType=VARCHAR},
		    #{mem_add2,jdbcType=VARCHAR},    #{mem_hometel,jdbcType=VARCHAR},    #{mem_comtel,jdbcType=VARCHAR},    #{mem_hp,jdbcType=VARCHAR},
		    #{mem_mail,jdbcType=VARCHAR},    #{mem_job,jdbcType=VARCHAR},    #{mem_like,jdbcType=VARCHAR},    #{mem_memorial,jdbcType=VARCHAR},
		    TO_DATE(#{mem_memorialday,jdbcType=DATE}, 'YYYY-MM-DD'), 3000
		)
		INTO USERROLE (MEM_ID, ROLE_NAME) VALUES (#{mem_id}, 'ROLE_USER')
		SELECT * FROM DUAL
	</insert>
	
	<select id="realDeleteMembers" statementType="CALLABLE" parameterType="map">
		{ CALL DELETEMEMBERS(#{rowcount, mode=OUT, jdbcType=NUMERIC}) }
		+
	</select>
</mapper>




