<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Student">
	<!-- 	학생추가 쿼리  -->
	<!-- DDITStudnetDAOImpl.java랑 연결되는 부분  -->
	<insert id="insertStudent" parameterClass="studentVO">
		<selectKey resultClass="string" keyProperty="code">
			SELECT 'S' || LPAD(TO_NUMBER(SUBSTR(MAX(CODE), 2))+1, 3, '0')
	         	FROM DDITSTUDENT   
		</selectKey>
			INSERT ALL
			INTO DDITSTUDENT ( CODE, NAME, BIRTHDAY, AGE, GR_CODE, GEN, CAREER)
			VALUES (
			#code#, #name#, TO_DATE(#birthday#,'YYYY-MM-DD'), #age#, #grade#, #gen#, #career#
			)
			<dynamic> <!-- for문을 돌리는 방법으로  -->
				<isNotNull property="lic_codes"> <!-- lic_code가 null이 아닌동안 반복문을 돌린다.  -->
					<iterate  property="lic_codes" >
					 INTO STD_LICENSE(STD_CODE,LIC_CODE) VALUES (#code#,#lic_codes[]#)
					</iterate>
				</isNotNull>
			</dynamic>
			SELECT * FROM DUAL
	</insert>
	
	<sql id="searchFrag">
		<dynamic prepend="WHERE">
				<isNotEmpty property="searchVO.searchWord">
					<isEqual property="searchVO.searchType" compareValue="name">
						NAME LIKE '%'||#searchVO.searchWord#||'%'
					</isEqual>
					<isEqual property="searchVO.searchType" compareValue="carrer">
						INSTR(CAREER, #searchVO.searchWord#) > 0					
					</isEqual>
					<isEqual property="searchVO.searchType" compareValue="all">
					NAME LIKE '%'||#searchVO.searchWord#||'%'
					 OR INSTR(CAREER, #searchVO.searchWord#) > 0					
					</isEqual>
				</isNotEmpty>
			</dynamic>
	</sql>
	
	<!--  학생 수정  -->
	<update id="updateStudent" parameterClass="studentVO">
		update dditstudent                                 
		 set name=#name#, birthday= to_date(#birthday#, 'yyyy-mm-dd'), age=#age#, gr_code=#grade#, gen=#gen#, career=#career#
		where code=#code#
	</update>
	
	
	<!--  학생 삭제  -->
	<delete id="deletStudent" parameterClass="string">
		delete from DDITSTUDENT where code=#code#
	</delete>
	
	<resultMap class="string" id="licenseMap">
		<result property="" column="LICENSE"/>
	</resultMap>
	
	<resultMap class="studentVO" id="studentMap" groupBy="code">
		<result property="code" column ="CODE"/>
		<result property="name" column ="NAME"/>
		<result property="birthday" column ="BIRTHDAY"/>
		<result property="age" column ="AGE"/>
		<result property="grade" column ="GRADE"/>
		<result property="gen" column ="GEN"/>
		<result property="career" column ="CAREER"/>
		<result property="license" javaType="java.util.List" resultMap="Student.licenseMap"/>
	</resultMap>
	
	<!-- 학생 한명만 조회  -->
	<select id="selectStudent" parameterClass="string" resultMap="Student.studentMap">
		SELECT A.CODE, NAME, TO_CHAR(BIRTHDAY, 'YYYY-MM-DD') BIRTHDAY, AGE, 
	           B.TEXT GRADE,  GEN,            
	           CAREER, D.TEXT LICENSE                                       
	     FROM  DDITSTUDENT A INNER JOIN GRADE B ON (GR_CODE = B.CODE)       
	           LEFT OUTER JOIN STD_LICENSE C ON(A.CODE = C.STD_CODE)       
	           LEFT OUTER JOIN LICENSE D ON (C.LIC_CODE = D.CODE)           
	     WHERE A.CODE = #code#       
	</select>
	
	<select id="selectStudentCount" parameterClass="pagingVO" resultClass="int">
		SELECT COUNT(*)
		FROM DDITSTUDENT
		<include refid="Student.searchFrag"/>
	</select>
	
	
	<!--  학생 전체 조회 -->
	<select id="selectStudentList" resultClass="studentVO">
		SELECT A.*
		FROM(
		SELECT ROWNUM RNUM, CODE, NAME,  AGE, DECODE(GEN, 'M','남', '여') GEN
			   FROM DDITSTUDENT
		<include refid="Student.searchFrag"/>
			ORDER BY CODE DESC
		)A
	   <![CDATA[
		WHERE RNUM >= #startRow# AND RNUM <= #endRow#
		]]>
	</select>
</sqlMap>
